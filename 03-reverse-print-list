题目：输入一个链表的头节点，从尾到头反过来打印出每个节点的值

链表的定义：
*    public class ListNode {
*        int val;
*        ListNode next = null;
*
*        ListNode(int val) {
*            this.val = val;
*        }
*    }
思路1:
	遍历链表的顺序是从头到尾，可是输出到顺序是从尾到头，这是典型的“后进先出”问题，我们可以用栈来实现。
代码：
	import java.util.ArrayList;
	public class Solution {
		public ArrayList<Integer> printListFromTailToHead(ListNode listNode) {
		ArrayList list = new ArrayList();
		while(listNode!=null){
			list.add(0,listNode.val);
			listNode = listNode.next;
		}
		return list;
		}
	}
思路2:
用java自带的递归栈结构来实现。
代码：
	import java.util.ArrayList;
	public class Solution {
		ArrayList list = new ArrayList();
		public ArrayList<Integer> printListFromTailToHead(ListNode listNode) {
			if(listNode!=null){
				printListFromTailToHead(listNode.next);
				list.add(listNode.val);
			}
			return list;
			}
		}
